Author:  Med Ali Hamza


global:
    # Sign up for a Mapzen API key to enjoy higher rate limits
    # url source 
    url: https://tile.openstreetmap.org/{z}/{x}/{y}.png #https://tile.opentopomap.org/{z}/{x}/{y}.png
    url_subdomains: []
    #bounds: []
    max_zoom: 19
    tile_size: 256
    #ux/ui
    ux_language: false             # l10n language code, trusting OSM in v0.10 tiles, fixed in v1.0 tiles
    ux_language_fallback: false    # l10n language code, trusting OSM in v0.10 tiles, fixed in v1.0 tiles
    ux_language_text_source: |
        function() {
            // if a ux_langauge has been defined use that, else if there is feature name in the fallback_ux_language then use that, else use the feature's default name in the local language
            return (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature.name;
        }
    ux_language_text_source_left: |
        function() {
            // if a ux_langauge has been defined use that, else if there is feature name in the fallback_ux_language then use that, else use the feature's default name in the local language
            return (global.ux_language && feature['name:left:'+global.ux_language]) || (global.ux_language_fallback && feature['name:left:'+global.ux_language_fallback]) || feature['name:left'];
        }
    ux_language_text_source_right: |
        function() {
            // if a ux_langauge has been defined use that, else if there is feature name in the fallback_ux_language then use that, else use the feature's default name in the local language
            return (global.ux_language && feature['name:right:'+global.ux_language]) || (global.ux_language_fallback && feature['name:right:'+global.ux_language_fallback]) || feature['name:right'];
        }
    ux_language_text_source_boundary_lines_left_right:
        left: global.ux_language_text_source_left
        right: global.ux_language_text_source_right
    ux_language_text_source_boundary_lines: |
       function() {
           var right = (global.ux_language && feature['name:right:'+global.ux_language]) || (global.ux_language_fallback && feature['name:right:'+global.ux_language_fallback]) || feature['name:right'];
           var left = (global.ux_language && feature['name:left:'+global.ux_language]) || (global.ux_language_fallback && feature['name:left:'+global.ux_language_fallback]) || feature['name:left'];
           if( right && left ) {
               //if( right.includes(' ') || left.includes(' ') ) {
                   return left + " - " + right;
               //} else {
               //    return right + '\n' + left;
               //}
           } else {
               return (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature.name;
           }
       }
    ux_language_text_source_short: |
        function() {
            return (global.ux_language && feature['name:short:'+global.ux_language]) || (global.ux_language_fallback && feature['name:short:'+global.ux_language_fallback]) || feature['name:short'];
        }
    ux_language_text_source_short_proxy_name: |
        function() {
            var name  = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'] || '';
            var short = (global.ux_language && feature['name:short:'+global.ux_language]) || (global.ux_language_fallback && feature['name:short:'+global.ux_language_fallback]) || feature['name:short'];
            return short ? name : '';
        }
    ux_language_text_source_abbreviation: |
        function() {
            var name  = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'] || '';
            var abbrev = (global.ux_language && feature['name:abbreviation:'+global.ux_language]) || (global.ux_language_fallback && feature['name:abbreviation:'+global.ux_language_fallback]) || feature['name:abbreviation'];
            return abbrev || name;
        }
    ux_language_text_source_iata: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'];
            if(feature.iata) {
                if (name) {
                    return name + ' (' + feature.iata + ')';
                }
                else {
                    return feature.iata;
                }
            } else {
                return name;
            }
        }
    ux_language_text_source_ocean: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'] || '';
            name = name.split(' ').join('\n');
            return name.split('').join('  ');
        }
    ux_language_text_source_sea: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'] || '';
            name = name.split(' ').join('\n');
            return name.split('').join(' ');
        }
    ux_language_text_source_continent_stacked_only: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'] || '';
            return name.split(' ').join('\n');
        }
    ux_language_text_source_continent: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'] || '';
            name = name.split(' ').join('\n');
            return name.split('').join(' ');
        }
    ux_language_text_source_road_ref_and_name: |
        function() {
            // if a ux_langauge has been defined use that, else if there is feature name in the fallback_ux_language then use that, else use the feature's default name in the local language
            return (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature.name;

            /*
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'];
            if(feature.ref && name) {
                return (feature.ref + ' ' + name);
            } else {
                return name;
            }
            */
        }
    ux_language_text_source_road_ref_and_name_short: |
        function() {
            // if a ux_langauge has been defined use that, else if there is feature name in the fallback_ux_language then use that, else use the feature's default name in the local language
            return (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature.name;

            /*
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'];
            if (feature.ref && (feature.ref.length < 6) && name) {
                return feature.ref + ' ' + name;
            } else {
                return name;
            }
            */
        }
    ux_language_text_source_piste_advanced: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'];
            return name ? ('◆ ' + name) : '◆';
        }
    ux_language_text_source_piste_expert: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'];
            return name ? ('◆◆ ' + name) : '◆◆';
        }
    ux_language_text_source_building_and_address: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'];
            if (name && feature.addr_housenumber) {
                return name + '\n' + feature.addr_housenumber;
            } else {
                return name;
            }
        }
    #label visibility
    text_visible_continent:             true
    text_visible_admin:                 true
    text_visible_populated_places:      true
    icon_visible_populated_places:      true
    text_visible_neighbourhoods:        true
    text_visible_neighbourhoods_e:      true
    text_visible_building:              false     # false for default
    text_visible_address:               false     # false for default
    text_visible_water_labels:          true
    text_visible_island:                true
    icon_visible_landuse_green:         true     # needs work
    text_visible_landuse_green:         true
    icon_size_green:                    [[0, '0px']]    # 0px for no, default, more  [[13, 14px], [16, 18px], [18, 19px]]
    icon_size_green_l:                  [[0, '0px']]    # 0px for no, default, more  [[14,24px],[16,32px]]
    icon_visible_arrows:                true
    icon_visible_poi_landuse:           false     # false for default
    text_visible_poi_landuse:           false     # false for default
    icon_visible_poi_landuse_e:         false     # false for default
    text_visible_landuse_generic:       false     # false for default
    icon_visible_station:               false     # false for default
    text_visible_station:               false     # false for default
    text_visible_highway:               true
    text_visible_trunk_primary:         true
    text_visible_trunk_primary_route:   true        # true by default
    text_visible_trunk_primary_e:       false     # false for default, false for more
    text_visible_secondary:             true
    text_visible_secondary_e:           false     # false for default, false for more
    text_visible_tertiary:              true
    text_visible_tertiary_e:            false     # false for default, false for more
    text_visible_minor_road:            true
    text_visible_minor_road_e:          true
    text_visible_service_road:          true
    text_visible_path:                  true
    text_visible_piste:                 true
    text_visible_steps:                 true
    text_visible_aerialway:             true
    text_visible_airport_gate:          true
    sdk_road_shields:                   true
    text_visible_exits:                 true
    # To facilitate data visualizations several recommended sort orders are provided
    #
    # Your classic raster map overlay.
    # Over all line and polygon features.
    # Under map labels (icons and text), under UI elements
    # (like routeline and search result pins).
    sdk_order_over_everything_but_text_0: 490
    sdk_order_over_everything_but_text_1: 491
    sdk_order_over_everything_but_text_2: 492
    sdk_order_over_everything_but_text_3: 493
    sdk_order_over_everything_but_text_4: 494
    sdk_order_over_everything_but_text_5: 495
    sdk_order_over_everything_but_text_6: 496
    sdk_order_over_everything_but_text_7: 497
    sdk_order_over_everything_but_text_8: 498
    sdk_order_over_everything_but_text_9: 499
    #
    # Your classic "underlay"
    # Under roads. Above borders, water, landuse, and earth.
    sdk_order_under_roads_0: 290
    sdk_order_under_roads_1: 291
    sdk_order_under_roads_2: 292
    sdk_order_under_roads_3: 293
    sdk_order_under_roads_4: 294
    sdk_order_under_roads_5: 295
    sdk_order_under_roads_6: 296
    sdk_order_under_roads_7: 297
    sdk_order_under_roads_8: 298
    sdk_order_under_roads_9: 299
    #
    # Under water.
    # Above earth and most landuse.
    sdk_order_under_water_0: 190
    sdk_order_under_water_1: 191
    sdk_order_under_water_2: 192
    sdk_order_under_water_3: 193
    sdk_order_under_water_4: 194
    sdk_order_under_water_5: 195
    sdk_order_under_water_6: 196
    sdk_order_under_water_7: 197
    sdk_order_under_water_8: 198
    sdk_order_under_water_9: 199
    #
    # Under everything.
    # Tip: disable earth layer.
    sdk_order_under_everything_0: 0
    sdk_order_under_everything_1: 1
    sdk_order_under_everything_2: 2
    sdk_order_under_everything_3: 3
    sdk_order_under_everything_4: 4
    sdk_order_under_everything_5: 5
    sdk_order_under_everything_6: 6
    sdk_order_under_everything_7: 7
    sdk_order_under_everything_8: 8
    sdk_order_under_everything_9: 9
    #
    # TRANSIT OVERLAY
    # should default to "auto", with SDK overriding it to true or false,
    # or app logic sets other booleans that triggers auto behavior later
    sdk_transit_overlay: false
    #
    # SHIELDS
    sdk_shield_color: [0.506,0.192,0.169]
    sdk_shield_text_color: white
    #
    # enable interactivity for key features
    sdk_interactive: true
    #
    # default order for basemap features
    feature_order: function() { return feature.sort_rank; }
    #
    #
    #label styling
    text_fill: [0.300, 0.300, 0.300]         # BLACK
    text_fill2: '#555'                       # WHITE
    text_fill_road_e: '#555'                 # WHITE
    text_fill_exits: [0.920,0.398,0.340]     # motorway junctions, highway_casing1
    text_fill_building: '#ccc'               # WHITE
    text_fill_address: '#aaa'                # HUH
    text_fill_water: '#4c89b5'               # blue
    text_fill_park: [0.35,0.35,0.35]         # black
    text_fill_beach: [0.35,0.35,0.35]        # black
    text_fill_piste: '#444'                  # dark gray
    text_fill_piste_e: '#666'                # dark gray early
    text_fill_shield: white                  # road shield fill color
    text_stroke: [0.870,0.870,0.870]         # land color
    text_stroke_water: [0.9, 0.9, 0.9]       # water stroke color
    text_stroke_park: '#bddec5'              # park stroke color
    text_stroke_building: [0.83, 0.83, 0.83] # building stroke color
    text_stroke_address:  [0.85, 0.85, 0.85] # address stroke color
    text_stroke_road1: [0.9, 0.9, 0.9]       # road stroke color highway
    text_stroke_road2: [0.9, 0.9, 0.9]       # road stroke color major road
    text_stroke_road3: [0.9, 0.9, 0.9]       # road stroke color major road route
    text_stroke_road4: [0.9, 0.9, 0.9]       # road stroke color minor road
    text_stroke_shield: '#D16768'            # road shield stroke color &highway_casing1
    townspot_sprite: townspot-m-rev          # depends on land color and text settings
    text_font_family: 'Open Sans'            # branding in asperational Unicode, yo (or Helvetica)
    #
    #roads
    highway1: [0.988,0.495,0.439]
    highway1_e: [0.988,0.495,0.439]
    highway_link1: [1.000,0.631,0.590]
    highway_casing1: [0.859,0.859,0.859]
    highway_tunnel1: [0.800,0.800,0.800]
    highway_tunnel_casing1: [0.870,0.870,0.870]
    highway_link_tunnel_casing1: [0.8, 0.8, 0.7]
    ferry1: '#8bb5e4'
    rail1: '#999'
    rail1_e: '#bbb'
    rail2: '#777'                           # less important rail (service, sidings)
    major_road1: [1, 1, 1]
    major_road1b: [1.0,1.0,1.0]
    major_road1c: white                     #15%
    major_road2: [1.0,1.0,1.0]
    major_road2a: [1.0,1.0,1.0]
    major_road2b: [1.0,1.0,1.0]
    major_road3: [1.0,1.0,1.0]
    major_road4: white
    major_road5: white
    major_casing1: [0.859,0.859,0.859]      # same as highway_casing1
    major_casing2: [0.859,0.859,0.859]      # zoomed out
    major_tunnel1: [.870,0.870,0.870]       # light orange (major_route1)
    major_tunnel_casing1: [0.780,0.780,0.780]
    major_route1: [1.000,0.631,0.590]
    major_route2: [1.000,0.752,0.730]       # zoomed out
    minor_route: [1.000,0.631,0.590]        # same as major_route
    minor_road1: [0.9,0.9,0.9]              # natural earth
    minor_road2: [0.9,0.9,0.9]              # natural earth, same as major_road2
    minor_road3: [0.9,0.9,0.9]
    minor_road4: [0.9,0.9,0.9]              # zoomed out
    minor_road5: [0.9,0.9,0.9]              # zoomed out, again
    minor_casing1: white                    # same as highway_casing1
    minor_casing2: white                    # zoomed out
    minor_tunnel1: [0.8, 0.8, 0.7]
    minor_tunnel_casing1: white
    service_road1: white
    service_road2: white
    service_road_casing1: [0.770,0.770,0.770]
    service_road_casing2: white
    path1: [0.91,0.91,0.91]
    path2: [0.91,0.91,0.91]                 # zoomed out
    path_casing1: [0.875,0.875,0.875]
    path_bridge_casing1: [0.870,0.870,0.870]
    path_bridge_casing2: [0.870,0.870,0.870] # zoomed out
    path_steps1: [0.91,0.91,0.91]
    path_steps1_b: '#f0ebeb'
    piste_easy: [0.367,0.750,0.622]
    piste_intermediate: [0.420,0.678,0.863]
    piste_advanced: [0.450,0.450,0.450]
    piste_expert: [0.450,0.450,0.450]
    #
    #boundaries
    country_boundary: [1.0,1.0,1.0]
    region_boundary: [0.96,0.96,0.96]
    subregion_boundary: '#bbb'
    city_wall: [0.682,0.682,0.682]
    retaining_wall: [0.827,0.808,0.780]
    snow_fence: [0.827,0.808,0.780]
    fence: [0.827,0.808,0.780]
    #
    #landuse
    water1: [0.83, 0.83, 0.83]              # water
    water2: [0.83, 0.83, 0.83]              # playa
    water1_o: '#9dc3de'                     # water stroke
    water2_o: '#9dc3de'                     # water stroke 2
    earth1: [0.870,0.870,0.870]             # land color, used to set scene background color
    earth1_r: '#666'                        # land color road
    earth2: '#e9e4e0'                       # urban
    earth2_v: false                         # urban
    earth2_e: '#b3b3b3'                     # urban early
    earth2_e2: '#b3b3b3'                    # urban early fade in
    earth2_e3: '#bbbbbb'                    # urban early fade in 3
    earth2_ev: true                         # urban early visibility
    green1: [0.140,0.843,0.824]             # park
    green1_r: [0.140,0.843,0.824]           # roads in parks
    green1_b: '#94d8d6'                     # buildings in parks
    green1_bo: '#7fc3c1'                    # buildings in parks, outlines
    green1_w: '#b7d7bf'                     # wilderness area
    green1_ws: '#aed0b6'                    # wilderness area stroke
    green1b: [0.80,0.80,0.80]               # park
    green2: [0.547,0.760,0.590]             # cemetery
    green2_r: [0.7,0.7,0.7]                 # cemetery road
    green3: [0.000,0.779,0.328]             # golf course
    green4: '#526054'                       # farm faint
    green4_v: false                         # farm faint
    green5: '#5a695c'                       # farm
    green6: '#648560'                       # nature reserve
    green7: [0.169,0.651,0.631]             # forest
    green8: [0.123,0.770,0.587]             # conservation
    green9: '#cfe3d4'                       # forest (landcover)
    green9_e: '#cfe3d4'                     # forest (landcover) early
    green9_v: true                          # forest (landcover) visibility
    green10: '#c7d4c0'                      # sports_centre
    green11: '#d8ddd0'                      # minor zoo related AOIs
    green11_o: '#aec7b5'                    # minor zoo related AOIs outline
    orange1: '#bfb08e'                      # stadium
    orange2: '#d8ccb0'                      # pitch (play field)
    orange3: '#b9a597'                      # racetrack (play field)
    brown1: [0.814,0.692,0.570]             # university
    brown1_r: [0.814,0.692,0.570]           # roads in university
    brown1_b: [.65, .65, .65]               # university buildings
    brown1_bo: [.8, .8, .8]                 # university building outlines
    brown2: '#ada497'                       # school
    brown3: '#c7b7a2'                       # playground
    red1: [0.840,0.503,0.541]               # hospital
    red1_r: [0.840,0.503,0.541]             # roads in hospital
    red1_b: [.65, .65, .65]                 # hospital buildings
    red1_bo: [.8, .8, .8]                   # hospital building outlines
    grey1: '#717171'                        # pedestrian, retail, airport apron, parking, church
    grey1_e: '#cac6c4'                      # pedestrian, retail, airport apron, parking, church early zoom 14
    grey1_v: true                           # pedestrian, retail, airport apron, parking, church
    grey2: [0.5, 0.5, 0.5]                  # airport runway
    grey3: grey                             # railway
    grey4: '#ffc52a'                        # airport taxiway
    grey5: '#ffc52a'                        # airport taxiway
    grey6: '#c6c6c6'                        # industrial
    grey6_b: [.65, .65, .65]                # industrial buildings
    grey6_bo: [.8, .8, .8]                  # industrial building outlines
    grey7: '#ecebe9'                        # pedestrian, match minor road / path color
    grey7_v: true                           # pedestrian visibility
    grey8: '#ecebe9'                        # winter sports
    grey8_v: true                           # winter sports visibility
    grey9: [.7, .0, .0, 0.5]                # [.7, .7, .7]        # transit platform
    grey9_o: [.5, .5, .5]                   # transit platform outline
    grey9_v: true                           # transit platform visibility
    grey10: '#d4cce6'                       # generic major landuse (theme park, resort, aquarium, winery)
    grey10_o: '#bcb9c5'                     # generic major landuse outline
    grey11: '#d7d7d7'                       # generic minor landuse (attraction, artwork)
    grey11_o: '#cccccc'                     # generic minor landuse outline
    grey12: '#cfcfcf'                       # generic minor amusements (roller coasters, rides, slide, carousel)
    grey12_o: '#c5c5c5'                     # generic minor amusements
    purple: '#f0e1e1'                       # airport
    purple_v: false                         # airport
    purple_b: '#c2c3c4'                     # airport buildings
    purple_bo: '#969798'                    # airport buildings outline
    mystry1: '#bfb08e'                      # recreation ground
    yellow1: '#e7eda8'                      # beach
    building1: [0.784, 0.784, 0.784]        # building
    building2: [.860, .860, .860]           # building stroke
    building_o:  5                          # building stroke order
    building_e: true                        # building stroke order early
    sdk_building_extrude: true              # building extrusion toggle
    building_extrude_height: |              # building extrude height logic
        function() { return feature.height || 20; }
textures:
    building-grid:
        url: https://raw.githubusercontent.com/tangrams/bubble-wrap/gh-pages/images/building-grid.gif
        filtering: mipmap
fonts:
    Montserrat:
        url: https://fonts.gstatic.com/s/montserrat/v7/zhcz-_WihjSQC0oHJ9TCYL3hpw3pgy2gAi-Ip7WPMi0.woff
    Open Sans:
        - weight: 400
          url: https://fonts.gstatic.com/s/opensans/v13/wMws1cEtxWZc6AZZIpiqWALUuEpTyoUstqEm5AMlJo4.woff
        - weight: 400
          style: italic
          url: https://fonts.gstatic.com/s/opensans/v13/O4NhV7_qs9r9seTo7fnsVLO3LdcAZYWl9Si6vvxL-qU.woff
sources:
    mapzen-osm:
        type: Raster
        url:  global.url
        url_subdomains: global.url_subdomains
        tile_size : global.tile_size
        max_zoom: global.max_zoom
        #bounds: global.bounds
layers:
  osm-raster:
    data:
      source: mapzen-osm
    draw:
      raster:
        order: 0 # draw on bottom
  route_line:
       data: { source: route_line }
       draw:
           lines:
               color: function() { return feature.color || red; }
               order: 500
               width: function() { return feature.width || '10px'; } 
               interactive: true
               outline: 
                    color: function() { return feature.outlineColor || [1.0, 1.0, 1.0, 0.0]; } 
                    width: function() { return feature.outlineWidth || '0px'; }
  pois:
        filter:
            all:
                - not: { kind: [building,address,farm,tree,apron,residential,commercial,industrial] }
                # White list a few kinds to "always" show per the tile zoom inclusion, else test feature's min_zoom
                #- function() { return feature.min_zoom <= $zoom }
                - function() { return feature.min_zoom <= ($zoom - 1) }
  
cameras:
    isometric:
        type: flat

styles:
    dashed:
        base: lines
        dash: [1.25, 1.25]
        dash_background_color: [0.808,0.860,0.851]
    dashed_big:
        base: lines
        dash: [2.0, 1.0]
        dash_background_color: [0.808,0.860,0.851]
    dashed_steps:
        base: lines
        dash: [0.5, 0.5]
        dash_background_color: [0.867, 0.867, 0.867]
    tools-tilecoords:
        shaders:
            blocks:
                global: |
                    // Varying to be added to both vertex and fragment shaders
                    varying vec2 v_pos;
                    #ifdef TANGRAM_FRAGMENT_SHADER
                    vec2 TileCoords() {
                        return fract(v_pos);
                    }
                    #endif
                position: |
                    v_pos = modelPosition().xy;
    tools-aastep:
        shaders:
            extensions: OES_standard_derivatives
            blocks:
                global: |
                    float aastep(float threshold, float value) {
                        #ifdef TANGRAM_FRAGMENT_SHADER
                            #ifdef TANGRAM_EXTENSION_OES_standard_derivatives
                                float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;
                                return smoothstep(threshold - afwidth, threshold + afwidth, value);
                            #else
                                return step(threshold, value);
                            #endif
                        #else
                            return step(threshold, value);
                        #endif
                    }
    tools-grid:
        mix: tools-tilecoords
        shaders:
            blocks:
                global: |
                    #ifdef TANGRAM_FRAGMENT_SHADER
                    bool grid(vec2 st, float res, float press) {
                        vec2 grid = fract(st * res);
                        return (grid.x < res * press) || (grid.y < res * press);
                    }
                    float TileGrid(float res) {
                        vec2 st = TileCoords() * 100. * res;
                        float pct = 0.0;
                        float press = 0.4 + (1.0 - fract(u_map_position.z)) * 0.1;
                        if (grid(st, 0.01, press)) { pct += 0.5; }
                        if (grid(st, 0.1, press)) { pct += 0.15; }
                        return pct;
                    }
                    float TileGrid() {
                        return mix(TileGrid(1.), TileGrid(2.), fract(u_map_position.z));
                    }
                    #endif
    grid:
        base: polygons
        mix: [tools-grid]
        shaders:
            blocks:
                filter: |
                    color.rgb = vec3(0.899, 0.95, 1.0);
                    color.rgb = mix(color.rgb, vec3(0.654,0.856,0.896), TileGrid());
    water_border:
        base: lines
        texcoords: true
        mix: tools-aastep
        shaders:
            blocks:
                global: |
                    float pulse(float x, float p, float w) {
                        x = abs(x - p);
                        if (x > w) { return 0.0; }
                        x /= w;
                        return (1.0 - x * x * (3.0 - 2.0 * x));
                    }
                width: |
                    // Comment/Uncomment to fix the line to the border
                    width *= 1.0 - v_texcoord.x;
                color: |
                    vec2 st = v_texcoord.xy;
                    float pattern = aastep(.5, pulse(st.x, .75, .15) + pulse(st.x, .4, .10) + pulse(st.x, .1, .1));
                    color.rgb = mix(color.rgb, vec3(0.675,0.855,0.886), pattern);
    shapes-circle:
        shaders:
            blocks:
                global: |
                    // get distance field of a Circle
                    // ================================
                    float circleDF (vec2 st) {
                        return dot(st,st);
                    }

    tiling-brick:
        shaders:
            blocks:
                global: |
                    // Repeats a coordinate space (st) in diferent brick-like tiles
                    // ================================
                    vec2 brick(vec2 st, float zoom){
                        st *= zoom;
                        // Here is where the offset is happening
                        st.x += step(1., mod(st.y, 2.0)) * 0.5;
                        return fract(st);
                    }
    pattern-dots:
        mix: [tools-tilecoords, tiling-brick, shapes-circle, tools-aastep]
        shaders:
            blocks:
                global: |
                    #ifdef TANGRAM_FRAGMENT_SHADER
                        float TileDots(float scale, float size) {
                            vec2 tc = TileCoords() * scale * pow(2., floor(u_map_position.z) - abs(u_tile_origin.z));
                            vec2 IN = brick(tc, 2.);
                            float A = circleDF(vec2(0.5) - IN) * 1.8;
                            float d = 0.0;
                            if (u_map_position.z < 18.) {
                                vec2 OUT = fract(tc * 2.);
                                float B = circleDF(vec2(0.25) - OUT) * 7.;
                                B = min(B, circleDF(vec2(0.75, 0.25) - OUT) * 7.);
                                B = min(B, circleDF(vec2(0.50, 0.75) - OUT) * 7.);
                                B = min(B, circleDF(vec2(0.00, 0.75) - OUT) * 7.);
                                B = min(B, circleDF(vec2(1.00, 0.75) - OUT) * 7.);
                                d = mix(A, B, pow(fract(u_map_position.z), 10.));
                            } else {
                                d = A;
                            }
                            return aastep(size, d);
                        }
                    #endif
    dots:
        base: polygons
        mix: pattern-dots
        shaders:
            blocks:
                color: |
                    color.rgb = mix(color.rgb, vec3(0.850), TileDots(45., 0.1));
                    // size was set to 35 previously, now 45

    dots-rev:
        base: polygons
        mix: pattern-dots
        shaders:
            blocks:
                color: |
                    color.rgb = mix(vec3(0.850), color.rgb, TileDots(45., .21));

    # HSV/RGB functions
    hsv:
        shaders:
            blocks:
                global: |
                    vec3 rgb2hsv(vec3 c)
                    {
                        vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
                        vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
                        vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
                        float d = q.x - min(q.w, q.y);
                        float e = 1.0e-10;
                        return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
                    }
                    vec3 hsv2rgb(vec3 c)
                    {
                        vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
                        vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
                        return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
                    }

    scale-buildings:
        shaders:
            blocks:
                position: |
                    // scale buildings based on zoom
                    float zoom = u_map_position.z;
                    float min = .1;       // minimum building scale
                    float midpoint = 16.; // middle of zoom range
                    float inspeed = .1;   // number of zooms to scale buildings up
                    float outspeed = 2.;  // number of zooms to scale buildings back down
                    float e = 0.;

                    if (zoom >= midpoint) {
                        e = (zoom - midpoint) / (outspeed * .2);
                    } else {
                        e = abs(zoom - midpoint) / inspeed;
                    }
                    position.z *= ((1. - min) / (1. + (exp(e)))) + min;

    building-grid:
        base: polygons
        lighting: false
        mix: [hsv, scale-buildings]
        texcoords: true
        shaders:
            uniforms:
                u_tex_grid: building-grid
            defines:
                WALL_TINT: vec3(1., 3., .800)
            blocks:
                color: |
                    if (dot(vec3(0., 0., 1.), worldNormal()) < .5) {
                        // If it's a wall
                        color.rgb = hsv2rgb(rgb2hsv(color.rgb) * WALL_TINT);
                        color.rgb = mix(color.rgb, vec3(0.),
                                        texture2D(u_tex_grid, v_texcoord).a);
                    }

    building-lines:
        base: lines
        mix: scale-buildings
    lines_transparent:
        base: lines
        blend: overlay
    outline_transparent:
        base: lines
        blend: overlay
    polygons_transparent:
        base: polygons
        blend: overlay
    text-blend-order:
        base: text
        blend_order: 1
    ux-route-line-overlay:
        base: lines
        blend: overlay
        blend_order: 0
    ux-route-line-dash-overlay:
        base: lines
        blend: overlay
        blend_order: 0
        dash: [2, 1]
    ux-transit-line-overlay:
        base: lines
        blend: overlay
        blend_order: 0
    ux-location-gem-overlay:
        base: points
        texture: mapzen_icon_library
        blend: overlay
        blend_order: 2
    ux-icons-overlay:
        base: points
        texture: mapzen_icon_library
        blend: overlay
        blend_order: 3
    sdk-point-overlay:
        base: points
        texture: mapzen_icon_library
        blend: overlay
        blend_order: 3
    sdk-shield-overlay:
        base: points
        texture: mapzen_icon_library
        blend: overlay
        blend_order: 3
    sdk-line-overlay:
        base: lines
        blend: overlay
        blend_order: 0
    sdk-polygon-overlay:
        base: polygons
        blend: overlay
        blend_order: 0
    mapzen_icon_library:
        base: points
        texture: mapzen_icon_library
        blend_order: 1
        draw:
            #size: global.icon_size
            sprite: function() { return feature.kind; }
            sprite_default: generic
            buffer: 3px
            text:
                buffer: 3px
                text_wrap: 18
                max_lines: 3
                font:
                    family: global.text_font_family
                    weight: normal
                    fill: [0.20,0.20,0.20]
                    size: [[13,10px],[14,11px],[17,12px],[19,12px],[20,14px]]
                    stroke: { color: global.text_stroke, width: [[12,2px],[16,4px]] }

textures:
    mapzen_icon_library:
        url: https://raw.githubusercontent.com/tangrams/bubble-wrap/gh-pages/themes/images/bubble-wrap%402x.png
        filtering: mipmap
        density: 5
        sprites:
            # define sprites: [x origin, y origin, width, height]
            accountant: [676, 654, 38, 38]
            acra: [528, 134, 38, 38]
            acra_alt1: [484, 134, 38, 38]
            aerialway: [862, 44, 38, 38]
            aeroway_gate: [548, 44, 38, 38]
            airfield: [818, 44, 38, 38]
            airport: [710, 90, 38, 38]
            aerodrome: [710, 90, 38, 38]
            allotments: [358, 310, 38, 38]
            alpine_hut: [360, 442, 38, 38]
            alpinehut: [360, 442, 38, 38]
            ambulatory_care: [266, 178, 38, 38]
            american_football: [708, 700, 38, 38]
            america-football: [708, 700, 38, 38]
            animal: [356, 700, 38, 38]
            aquarium: [222, 832, 38, 38]
            architect: [754, 90, 38, 38]
            arrow: [710, 876, 38, 38]
            art: [632, 744, 38, 38]
            arts_centre: [588, 744, 38, 38]
            artwork: [542, 744, 38, 38]
            assisted_living: [184, 354, 38, 38]
            association: [176, 134, 38, 38]
            foundation: [176, 134, 38, 38]
            atm: [90, 654, 38, 38]
            attraction: [756, 876, 38, 38]
            aviary: [904, 310, 38, 38]
            bag: [576, 178, 38, 38]
            bakery: [496, 744, 38, 38]
            bank: [186, 656, 38, 38]
            bar: [844, 700, 38, 38]
            pub: [844, 700, 38, 38]
            barrier: [222, 788, 38, 38]
            baseball: [412, 354, 38, 38]
            basketball: [366, 354, 38, 38]
            battlefield: [858, 310, 38, 38]
            bbq: [0, 310, 38, 38]
            beach: [838, 398, 38, 38]
            beach_coarse: [408, 0, 38, 38]
            beach_resort: [792, 398, 38, 38]
            beauty: [224, 266, 38, 38]
            bench: [268, 90, 38, 38]
            beverages: [90, 876, 38, 38]
            bicycle: [582, 610, 38, 38]
            bicycle-share: [582, 610, 38, 38]
            bicycle_share: [582, 610, 38, 38]
            bicycle_parking: [222, 610, 38, 38]
            bicycle_rental: [674, 610, 38, 38]
            bicycle_rental_station: [674, 610, 38, 38]
            rental_bicycle: [674, 610, 38, 38]
            bicycle_repair_station: [628, 610, 38, 38]
            biergarten: [574, 876, 38, 38]
            brewery: [574, 876, 38, 38]
            beer: [574, 876, 38, 38]
            blood_bank: [486, 178, 38, 38]
            blood-bank: [486, 178, 38, 38]
            boat_rental: [404, 310, 38, 38]
            boat_storage: [402, 90, 38, 38]
            bollard: [220, 486, 38, 38]
            books: [536, 610, 38, 38]
            border_control: [704, 134, 38, 38]
            breakwater: [628, 788, 38, 38]
            bridge: [794, 486, 38, 38]
            bucket: [616, 398, 38, 38]
            buddhist: [88, 486, 38, 38]
            buddhism: [88, 486, 38, 38]
            building: [320, 744, 38, 38]
            hangar: [320, 744, 38, 38]
            nursing_home: [320, 744, 38, 38]
            manor: [320, 744, 38, 38]
            apartments: [320, 744, 38, 38]
            care_home: [320, 744, 38, 38]
            building_alt1: [44, 90, 38, 38]
            building-alt1: [44, 90, 38, 38]
            bunker: [776, 354, 38, 38]
            bureau_de_change: [90, 700, 38, 38]
            bus_station: [622, 90, 38, 38]
            bus_stop: [622, 90, 38, 38]
            bus: [622, 90, 38, 38]
            butcher: [0, 266, 38, 38]
            cafe: [450, 744, 38, 38]
            camp_site: [132, 486, 38, 38]
            summer_camp: [132, 486, 38, 38]
            campsite: [132, 486, 38, 38]
            camping: [132, 486, 38, 38]
            capital-l: [464, 922, 33, 33]
            capital-m: [432, 922, 24, 24]
            capital-s: [402, 922, 20, 20]
            capital-xl: [552, 922, 38, 38]
            capital-xs: [380, 922, 16, 16]
            car: [492, 610, 38, 38]
            car_parts: [232, 654, 38, 38]
            car_rental: [312, 90, 38, 38]
            rental_car: [312, 90, 38, 38]
            car_repair: [276, 654, 38, 38]
            car_sharing: [400, 610, 38, 38]
            car_wash: [950, 44, 38, 38]
            caravan_site: [714, 266, 38, 38]
            caravan_park: [714, 266, 38, 38]
            carousel: [178, 832, 38, 38]
            carpenter: [852, 610, 38, 38]
            category-namespace-do_and_see: [88, 832, 38, 38]
            category-predicate-attraction: [88, 832, 38, 38]
            category-namespace-eat_and_drink: [896, 832, 38, 38]
            category-predicate-eat: [896, 832, 38, 38]
            category-namespace-education_and_religion: [596, 354, 42, 36]
            category-predicate-education: [596, 354, 42, 36]
            category-namespace-health: [762, 0, 38, 38]
            category-predicate-health: [762, 0, 38, 38]
            category-namespace-mobility: [444, 610, 42, 36]
            category-predicate-mobility: [444, 610, 42, 36]
            category-namespace-other: [228, 354, 38, 38]
            category-predicate-addressing: [0, 744, 42, 36]
            category-predicate-civic: [400, 700, 38, 38]
            category-predicate-drink: [796, 700, 38, 38]
            category-predicate-fun: [402, 788, 44, 36]
            category-predicate-industry: [272, 744, 42, 36]
            category-predicate-money: [136, 654, 42, 42]
            category-predicate-nature: [440, 530, 38, 38]
            category-predicate-religion: [48, 744, 42, 36]
            category-predicate-service: [688, 354, 38, 38]
            category-predicate-shop: [400, 222, 42, 36]
            category-namespace-shop_and_service: [400, 222, 42, 36]
            category-predicate-sleep: [490, 90, 38, 38]
            category-predicate-transport: [132, 44, 42, 42]
            cave: [764, 744, 38, 38]
            cave_entrance: [764, 744, 38, 38]
            cemetery: [44, 486, 38, 38]
            grave_yard: [44, 486, 38, 38]
            chalet: [134, 442, 38, 38]
            charging_station: [310, 610, 38, 38]
            childcare: [550, 354, 38, 38]
            day_care: [550, 354, 38, 38]
            childrens_centre: [504, 354, 38, 38]
            childrens_hospital: [354, 178, 38, 38]
            christian: [314, 530, 38, 38]
            religious-christian: [314, 530, 38, 38]
            cinema: [266, 832, 38, 38]
            city_wall: [132, 134, 38, 38]
            cliff: [530, 486, 38, 38]
            clinic: [844, 0, 38, 38]
            doctors: [844, 0, 38, 38]
            doctor: [844, 0, 38, 38]
            physician: [844, 0, 38, 38]
            closed: [170, 922, 28, 28]
            clothes: [354, 832, 38, 38]
            fashion: [354, 832, 38, 38]
            clothing-store: [354, 832, 38, 38]
            coffee: [806, 222, 38, 38]
            college: [400, 832, 38, 38]
            university: [400, 832, 38, 38]
            educational_institution: [400, 832, 38, 38]
            commercial: [930, 178, 38, 38]
            common: [88, 134, 38, 38]
            communication_tower: [572, 398, 38, 38]
            communications_tower: [572, 398, 38, 38]
            communications: [396, 398, 38, 38]
            community_centre: [660, 134, 38, 38]
            confectionery: [534, 832, 38, 38]
            consulting: [90, 610, 38, 38]
            convenience: [314, 266, 38, 38]
            copyshop: [0, 700, 38, 38]
            cosmetics: [180, 266, 38, 38]
            courthouse: [44, 44, 38, 38]
            craft: [764, 610, 38, 38]
            cricket: [664, 700, 38, 38]
            cycle_barrier: [88, 788, 38, 38]
            dairy_kitchen: [264, 398, 38, 38]
            dam: [266, 788, 38, 38]
            danger: [968, 134, 38, 38]
            danger_area: [968, 134, 38, 38]
            defibrillator: [442, 178, 38, 38]
            deli: [180, 530, 38, 38]
            dentist: [888, 0, 38, 38]
            department_store: [354, 610, 38, 38]
            dog_park: [896, 266, 38, 38]
            dog-park: [896, 266, 38, 38]
            dot-black: [176, 90, 38, 38]
            sdk_circle: [176, 90, 38, 38]
            sdk_circle_stroked: [176, 90, 38, 38]
            dot-white: [222, 90, 38, 38]
            dressmaker: [310, 832, 38, 38]
            drinking_water: [530, 876, 38, 38]
            drinking-water: [530, 876, 38, 38]
            drinking_water_well: [486, 876, 38, 38]
            dry_cleaning: [268, 266, 38, 38]
            dune: [580, 832, 38, 38]
            egress: [442, 486, 38, 38]
            electrician: [890, 90, 38, 38]
            electronics: [134, 610, 38, 38]
            computer: [134, 610, 38, 38]
            elevator: [594, 44, 38, 38]
            emergency_phone: [924, 134, 38, 38]
            emergency-phone: [924, 134, 38, 38]
            employment_agency: [852, 744, 38, 38]
            enclosure: [312, 788, 38, 38]
            fence: [312, 788, 38, 38]
            entrance: [222, 700, 38, 38]
            entrance_alt1: [366, 654, 38, 38]
            entrance-alt1: [366, 654, 38, 38]
            estate_agent: [44, 178, 38, 38]
            factory: [228, 744, 38, 38]
            industrial: [228, 744, 38, 38]
            chimney: [228, 744, 38, 38]
            substation: [228, 744, 38, 38]
            wastewater_plant: [228, 744, 38, 38]
            works: [228, 744, 38, 38]
            water_works: [228, 744, 38, 38]
            plant: [228, 744, 38, 38]
            generator: [228, 744, 38, 38]
            farm: [626, 442, 38, 38]
            farmyard: [626, 442, 38, 38]
            farmland: [582, 442, 38, 38]
            fast_food: [0, 876, 38, 38]
            fast-food: [0, 876, 38, 38]
            ferry: [666, 90, 38, 38]
            ferry_terminal: [666, 90, 38, 38]
            financial: [44, 222, 38, 38]
            fire_hydrant: [542, 654, 38, 38]
            fire_station: [0, 44, 38, 38]
            fire-station: [0, 44, 38, 38]
            firestation: [0, 44, 38, 38]
            firepit: [850, 266, 38, 38]
            fishing: [760, 266, 38, 38]
            fishing_area: [760, 266, 38, 38]
            fitness: [672, 222, 38, 38]
            fitness_station: [672, 222, 38, 38]
            florist: [224, 530, 38, 38]
            food_bank: [718, 222, 38, 38]
            footway: [220, 398, 38, 38]
            ford: [318, 44, 38, 38]
            forest: [804, 832, 38, 38]
            natural_forest: [804, 832, 38, 38]
            nature_reserve: [804, 832, 38, 38]
            conservation: [804, 832, 38, 38]
            protected_area: [804, 832, 38, 38]
            grass: [804, 832, 38, 38]
            wood: [804, 832, 38, 38]
            fountain: [530, 530, 38, 38]
            fuel: [490, 832, 38, 38]
            funeral_directors: [808, 610, 38, 38]
            furniture: [898, 530, 38, 38]
            gallery: [676, 744, 38, 38]
            art-gallery: [676, 744, 38, 38]
            gambling: [532, 700, 38, 38]
            gaming: [892, 788, 38, 38]
            garden: [882, 398, 38, 38]
            garden_centre_alt1: [626, 266, 38, 38]
            garden_centre: [626, 266, 38, 38]
            garden-center: [626, 266, 38, 38]
            gardener: [898, 654, 38, 38]
            gas_canister: [542, 310, 38, 38]
            gate: [134, 788, 38, 38]
            generator_nuclear: [528, 398, 38, 38]
            generator_solar: [484, 398, 38, 38]
            generator_wind: [440, 398, 38, 38]
            power_wind: [440, 398, 38, 38]
            generic: [848, 878, 38, 38]
            generic_rev: [802, 878, 38, 38]
            generic_shield-1char: [710, 966, 72, 72]
            generic_shield-2char: [300, 1098, 96, 72]
            generic_shield-3char: [160, 1098, 132, 72]
            generic_shield-4char: [0, 1098, 152, 72]
            generic_shield-5char: [788, 966, 182, 72]
            geyser: [496, 0, 38, 38]
            gift: [88, 530, 38, 38]
            glacier: [758, 832, 38, 38]
            golf: [620, 700, 38, 38]
            golf_course: [320, 354, 38, 38]
            government: [444, 700, 38, 38]
            public: [444, 700, 38, 38]
            embassy: [444, 700, 38, 38]
            administrative: [444, 700, 38, 38]
            grave_yard_christian: [0, 486, 38, 38]
            grave_yard_generic: [978, 442, 38, 38]
            grave_yard_jewish: [934, 442, 38, 38]
            grave_yard_muslim: [890, 442, 38, 38]
            greengrocer: [894, 222, 38, 38]
            group_home: [820, 354, 38, 38]
            residential_home: [820, 354, 38, 38]
            groyne: [584, 788, 38, 38]
            guest_house: [268, 442, 38, 38]
            bed_and_breakfast: [268, 442, 38, 38]
            hairdresser: [980, 90, 38, 38]
            halt: [456, 44, 38, 38]
            hanami: [712, 832, 38, 38]
            handicraft: [452, 788, 38, 38]
            harbor: [266, 700, 38, 38]
            hardware: [626, 222, 38, 38]
            doityourself: [626, 222, 38, 38]
            painter: [626, 222, 38, 38]
            diy: [626, 222, 38, 38]
            hazard: [496, 788, 38, 38]
            health_centre: [184, 744, 38, 38]
            healthcare: [184, 744, 38, 38]
            heart: [398, 178, 38, 38]
            helipad: [502, 44, 38, 38]
            heliport: [774, 44, 38, 38]
            hifi: [798, 178, 38, 38]
            hindu: [890, 700, 38, 38]
            hinduist: [890, 700, 38, 38]
            historical: [44, 530, 38, 38]
            castle: [44, 530, 38, 38]
            fort: [44, 530, 38, 38]
            home: [970, 398, 38, 38]
            horse_riding: [576, 700, 38, 38]
            horse-riding: [576, 700, 38, 38]
            hospital: [804, 0, 38, 38]
            hotel: [534, 90, 38, 38]
            motel: [534, 90, 38, 38]
            hostel: [534, 90, 38, 38]
            lodging: [534, 90, 38, 38]
            hunting: [452, 0, 38, 38]
            hunting_stand: [222, 442, 38, 38]
            hvac: [578, 90, 38, 38]
            ice_cream: [618, 876, 38, 38]
            ice-cream: [618, 876, 38, 38]
            industry: [132, 90, 38, 38]
            information: [664, 876, 38, 38]
            it: [536, 222, 38, 38]
            jewelry: [492, 222, 38, 38]
            jewish: [586, 0, 38, 38]
            religious-jewish: [586, 0, 38, 38]
            karaoke: [178, 700, 38, 38]
            land: [138, 354, 38, 38]
            landmark: [976, 0, 38, 38]
            memorial: [976, 0, 38, 38]
            monument: [976, 0, 38, 38]
            tower: [976, 0, 38, 38]
            beacon: [976, 0, 38, 38]
            landuse: [538, 442, 38, 38]
            laundry: [448, 222, 38, 38]
            lawyer: [852, 654, 38, 38]
            level_crossing: [46, 0, 38, 38]
            level_crossing-s: [92, 0, 38, 38]
            level_crossing2: [92, 0, 38, 38]
            library: [542, 0, 38, 38]
            life_ring: [760, 788, 38, 38]
            lifeguard_tower: [88, 398, 38, 38]
            liftgate: [0, 832, 38, 38]
            lift_gate: [0, 832, 38, 38]
            light_rail: [446, 90, 38, 38]
            tram_stop: [446, 90, 38, 38]
            rail-light: [446, 90, 38, 38]
            lighthouse: [0, 354, 38, 38]
            liquor: [942, 530, 38, 38]
            alcohol: [942, 530, 38, 38]
            alcohol-shop: [942, 530, 38, 38]
            lock: [0, 788, 38, 38]
            logging: [0, 654, 38, 38]
            logging_alt1: [44, 654, 38, 38]
            marina: [310, 700, 38, 38]
            dock: [310, 700, 38, 38]
            marketplace: [882, 486, 38, 38]
            mast: [352, 398, 38, 38]
            maze: [940, 744, 38, 38]
            meadow: [926, 398, 38, 38]
            metal_construction: [764, 654, 38, 38]
            midwife: [222, 178, 38, 38]
            military: [264, 134, 38, 38]
            mine: [230, 0, 38, 38]
            mineshaft: [580, 222, 38, 38]
            quarry: [580, 222, 38, 38]
            adit: [580, 222, 38, 38]
            mini_roundabout: [272, 44, 38, 38]
            miniature_golf: [488, 700, 38, 38]
            mobile_phone: [222, 222, 38, 38]
            mobile-phone: [222, 222, 38, 38]
            money_transfer: [46, 700, 38, 38]
            motorcycle: [178, 310, 38, 38]
            motorcycle_parking: [264, 486, 38, 38]
            motorway_junction: [176, 486, 38, 38]
            museum: [0, 530, 38, 38]
            observatory: [0, 530, 38, 38]
            music: [0, 222, 38, 38]
            musical_instrument: [754, 178, 38, 38]
            muslim: [630, 0, 38, 38]
            religious-muslim: [630, 0, 38, 38]
            natural: [494, 442, 38, 38]
            newsagent: [710, 178, 38, 38]
            newspaper: [974, 178, 38, 38]
            kiosk: [974, 178, 38, 38]
            ngo: [440, 134, 38, 38]
            nightclub: [748, 398, 38, 38]
            club: [748, 398, 38, 38]
            notary: [808, 654, 38, 38]
            obelisk: [308, 134, 38, 38]
            office: [732, 354, 38, 38]
            insurance: [732, 354, 38, 38]
            company: [732, 354, 38, 38]
            offshore_platform: [44, 398, 38, 38]
            oneway: [618, 486, 38, 38]
            oneway-reverse: [574, 486, 38, 38]
            oneway_reverse: [574, 486, 38, 38]
            optician: [530, 178, 38, 38]
            orchard: [364, 0, 38, 38]
            outdoor: [634, 310, 38, 38]
            outreach: [44, 134, 38, 38]
            oxfam: [396, 134, 38, 38]
            park: [486, 530, 38, 38]
            national_park: [486, 530, 38, 38]
            protected_area: [486, 530, 38, 38]
            park-l: [358, 532, 74, 74]
            park_alt1: [450, 442, 38, 38]
            park-alt1: [450, 442, 38, 38]
            parking: [266, 612, 38, 38]
            parking_garage: [706, 486, 38, 38]
            parking-garage: [706, 486, 38, 38]
            peak: [950, 310, 38, 38]
            mountain: [950, 310, 38, 38]
            pedestrian: [630, 654, 38, 38]
            perfumery: [136, 266, 38, 38]
            pet: [178, 178, 38, 38]
            petroleum_well: [0, 398, 38, 38]
            petting_zoo: [952, 354, 38, 38]
            pharmacy: [92, 266, 38, 38]
            chemist: [92, 266, 38, 38]
            photographer: [90, 178, 38, 38]
            photographic_laboratory: [134, 178, 38, 38]
            photo: [134, 178, 38, 38]
            picnic_site: [134, 310, 38, 38]
            picnic-site: [134, 310, 38, 38]
            picnic: [134, 310, 38, 38]
            picnic_table: [88, 310, 38, 38]
            pier: [356, 90, 38, 38]
            place_of_worship: [96, 744, 38, 38]
            chapel: [96, 744, 38, 38]
            place-of-worship: [96, 744, 38, 38]
            place_square: [178, 442, 38, 38]
            plant_nursery: [320, 0, 38, 38]
            plaque: [352, 134, 38, 38]
            memorial_plaque: [352, 134, 38, 38]
            playground: [178, 222, 38, 38]
            plumber: [944, 654, 38, 38]
            police: [932, 0, 38, 38]
            political_party: [0, 134, 38, 38]
            polling_place: [220, 134, 38, 38]
            post_box: [88, 222, 38, 38]
            post_office: [140, 744, 38, 38]
            post: [140, 744, 38, 38]
            pottery: [270, 530, 38, 38]
            power_pole: [410, 654, 38, 38]
            power_tower: [498, 654, 38, 38]
            power_tower_small: [454, 654, 38, 38]
            prison: [880, 134, 38, 38]
            put_in: [398, 486, 38, 38]
            put_in_egress: [354, 486, 38, 38]
            pylon: [44, 442, 38, 38]
            rail_metro: [0, 90, 38, 38]
            rail-metro: [0, 90, 38, 38]
            railway: [410, 44, 38, 38]
            ranger_station: [44, 310, 38, 38]
            ranger-station: [44, 310, 38, 38]
            rapid: [486, 486, 38, 38]
            recreation_track: [268, 310, 38, 38]
            recycling: [0, 178, 38, 38]
            reef: [720, 744, 38, 38]
            refugee_camp: [0, 442, 38, 38]
            religion: [670, 442, 38, 38]
            research: [458, 354, 38, 38]
            residential_community: [836, 134, 38, 38]
            residential-community: [836, 134, 38, 38]
            residential: [836, 134, 38, 38]
            resort: [314, 442, 38, 38]
            rest_area: [908, 354, 38, 38]
            restaurant: [850, 832, 38, 38]
            retail: [312, 222, 38, 38]
            store: [312, 222, 38, 38]
            mall: [312, 222, 38, 38]
            retaining_wall: [314, 310, 38, 38]
            roadblock: [662, 486, 38, 38]
            rock: [496, 310, 38, 38]
            rocket: [730, 44, 38, 38]
            roller_coaster: [44, 832, 38, 38]
            ruin: [88, 90, 38, 38]
            ruins: [88, 90, 38, 38]
            archaeological_site: [88, 90, 38, 38]
            runway: [364, 44, 38, 38]
            rural: [274, 0, 38, 38]
            saddle: [92, 354, 38, 38]
            sawmill: [134, 530, 38, 38]
            school: [644, 354, 38, 38]
            kindergarten: [644, 354, 38, 38]
            scooter: [686, 44, 38, 38]
            scree: [132, 222, 38, 38]
            scrub: [722, 310, 38, 38]
            scuba_diving: [588, 310, 38, 38]
            dive_centre: [588, 310, 38, 38]
            sdk_circle: [238, 922, 24, 24]
            circle: [238, 922, 24, 24]
            sdk_circle_stroked: [206, 924, 22, 22]
            circle-stroked: [206, 924, 22, 22]
            sdk_cross: [358, 922, 16, 16]
            cross: [358, 922, 16, 16]
            sdk_heart: [326, 922, 22, 22]
            sdk_marker: [0, 922, 30, 40]
            marker: [0, 922, 30, 40]
            sdk_marker_alt1: [964, 878, 34, 34]
            sdk_marker_stroked: [892, 876, 32, 40]
            marker-stroked: [892, 876, 32, 40]
            sdk_marker_stroked_alt1: [928, 876, 32, 40]
            sdk_shield-1char: [400, 1098, 84, 84]
            sdk_shield-2char: [0, 1188, 112, 84]
            sdk_shield-3char: [870, 1098, 144, 84]
            sdk_shield-4char: [694, 1098, 168, 84]
            sdk_shield-5char: [494, 1098, 192, 84]
            sdk_solid_shield-1char: [120, 1188, 84, 84]
            sdk_solid_shield-2char: [212, 1188, 112, 84]
            sdk_solid_shield-3char: [332, 1188, 144, 84]
            sdk_solid_shield-4char: [484, 1188, 168, 84]
            sdk_solid_shield-5char: [660, 1188, 192, 84]
            sdk_square: [298, 922, 22, 22]
            square: [298, 922, 22, 22]
            sdk_square_stroked: [268, 922, 22, 22]
            square-stroked: [268, 922, 22, 22]
            sdk_star: [72, 924, 30, 24]
            star: [72, 924, 30, 24]
            sdk_star_stroked: [34, 924, 32, 24]
            star-stroked: [34, 924, 32, 24]
            sdk_triangle: [140, 922, 26, 20]
            triangle: [140, 922, 26, 20]
            sdk_triangle_stroked: [106, 922, 28, 20]
            triangle-stroked: [106, 922, 28, 20]
            seafood: [850, 222, 38, 38]
            fishmonger: [850, 222, 38, 38]
            service_area: [970, 486, 38, 38]
            shelter: [792, 134, 38, 38]
            shintoist: [846, 442, 38, 38]
            shoemaker: [266, 222, 38, 38]
            shoes: [666, 178, 38, 38]
            shop: [886, 178, 38, 38]
            shower: [670, 266, 38, 38]
            sikhist: [802, 442, 38, 38]
            sinkhole: [668, 832, 38, 38]
            ski: [714, 530, 38, 38]
            winter_sports: [714, 530, 38, 38]
            skiing: [714, 530, 38, 38]
            ski_jumping: [668, 530, 38, 38]
            ski_rental: [622, 530, 38, 38]
            ski_school: [576, 530, 38, 38]
            slaughterhouse: [940, 610, 38, 38]
            slipway: [-2, 2, 42, 36]
            transport_slipway: [-2, 2, 42, 36]
            snow_cannon: [716, 788, 38, 38]
            snow_fence: [672, 788, 38, 38]
            snowmobile: [640, 44, 38, 38]
            soccer: [274, 354, 38, 38]
            social_facility: [616, 134, 38, 38]
            soup_kitchen: [308, 398, 38, 38]
            sports: [936, 90, 38, 38]
            sports_centre: [752, 700, 38, 38]
            pitch: [752, 700, 38, 38]
            recreation_ground: [752, 700, 38, 38]
            spring: [46, 354, 38, 38]
            hot_spring: [46, 354, 38, 38]
            stadium: [806, 530, 38, 38]
            stationery: [404, 266, 38, 38]
            stone: [624, 832, 38, 38]
            stonemason: [720, 654, 38, 38]
            storage_tank: [848, 788, 38, 38]
            street_lamp: [804, 788, 38, 38]
            studio: [720, 610, 38, 38]
            subway_entrance: [906, 44, 38, 38]
            suitcase: [896, 610, 38, 38]
            summer_toboggan: [808, 744, 38, 38]
            supermarket: [0, 610, 38, 38]
            grocery: [0, 610, 38, 38]
            sushi: [938, 222, 38, 38]
            swimming_area: [804, 266, 38, 38]
            swimming: [804, 266, 38, 38]
            swimming_pool: [852, 530, 38, 38]
            swing_gate: [178, 788, 38, 38]
            tailor: [844, 90, 38, 38]
            taoist: [758, 442, 38, 38]
            taqueria: [944, 832, 38, 38]
            tax_advisor: [46, 610, 38, 38]
            taxi: [178, 610, 38, 38]
            taxiway: [226, 44, 38, 38]
            tea: [762, 222, 38, 38]
            teahouse: [406, 744, 38, 38]
            telecommunication: [896, 744, 38, 38]
            telephone: [704, 398, 38, 38]
            phone: [704, 398, 38, 38]
            telescope: [450, 310, 38, 38]
            tennis: [760, 530, 38, 38]
            theatre: [356, 788, 38, 38]
            theme_park: [926, 486, 38, 38]
            amusement_ride: [926, 486, 38, 38]
            amusement-park: [926, 486, 38, 38]
            therapist: [310, 178, 38, 38]
            tobacco: [620, 178, 38, 38]
            toilets: [750, 486, 38, 38]
            toilet: [750, 486, 38, 38]
            toll_booth: [938, 788, 38, 38]
            town_hall: [748, 134, 38, 38]
            town-hall: [748, 134, 38, 38]
            townhall: [748, 134, 38, 38]
            townspot-l: [852, 922, 32, 32]
            townspot-l-rev: [678, 922, 36, 28]
            townspot-m: [818, 922, 24, 24]
            town: [818, 922, 24, 24]
            townspot-m-rev: [648, 922, 24, 24]
            townspot-s: [792, 922, 20, 20]
            townspot-s-rev: [620, 922, 20, 20]
            townspot-xl: [892, 922, 38, 38]
            townspot-xl-rev: [718, 922, 42, 36]
            city: [718, 924, 42, 36]
            townspot-xs: [768, 922, 16, 16]
            village: [768, 922, 16, 16]
            townspot-xs-rev: [600, 922, 12, 12]
            toys: [800, 90, 38, 38]
            trade: [46, 266, 38, 38]
            traffic_signals: [444, 832, 38, 38]
            traffic_light: [444, 832, 38, 38]
            trail_riding_station: [132, 398, 38, 38]
            trailhead: [678, 310, 38, 38]
            train: [88, 44, 38, 38]
            rail: [88, 44, 38, 38]
            train_station: [182, 44, 38, 38]
            station: [182, 44, 38, 38]
            travel_agency: [360, 266, 38, 38]
            travel_agent: [360, 266, 38, 38]
            tree: [138, 0, 38, 38]
            tree-s: [184, 0, 38, 38]
            tyres: [842, 178, 38, 38]
            urban: [310, 486, 38, 38]
            urban_area: [310, 486, 38, 38]
            ux-current-location: [296, 966, 88, 88]
            ux-locate-off: [630, 966, 72, 72]
            ux-locate-on: [550, 966, 72, 72]
            ux-route-arrow: [0, 966, 130, 130]
            ux-route-start: [216, 966, 72, 92]
            ux-route-stop: [136, 966, 72, 92]
            ux-search-active: [390, 966, 72, 108]
            ux-search-inactive: [470, 966, 72, 108]
            ux-transit-stop: [504, 924, 38, 38]
            variety_store: [356, 222, 38, 38]
            veterinary: [718, 0, 38, 38]
            veterinary_dog: [674, 0, 38, 38]
            viewpoint: [134, 832, 38, 38]
            village_green: [586, 654, 38, 38]
            vineyard: [320, 654, 38, 38]
            volcano: [448, 266, 38, 38]
            walking_junction: [176, 398, 38, 38]
            warehouse: [406, 442, 38, 38]
            waste_basket: [660, 398, 38, 38]
            waste-basket: [660, 398, 38, 38]
            waste_disposal: [864, 354, 38, 38]
            water: [538, 266, 38, 38]
            water_park: [814, 310, 38, 38]
            water_point: [178, 876, 38, 38]
            water_slide: [768, 310, 38, 38]
            water_tower: [224, 310, 38, 38]
            water_well_drinking_water_no_pump: [442, 876, 38, 38]
            water_well_drinking_water_pump_auto: [310, 876, 38, 38]
            water_well_drinking_water_pump_manual: [266, 876, 38, 38]
            water_well_no_pump: [398, 876, 38, 38]
            water_well: [398, 876, 38, 38]
            water_well_pump_auto: [354, 876, 38, 38]
            water_well_pump_manual: [222, 876, 38, 38]
            waterfall: [942, 266, 38, 38]
            watering_place: [134, 876, 38, 38]
            watermill: [494, 266, 38, 38]
            wayside_cross: [714, 442, 38, 38]
            wayside_shrine: [934, 700, 38, 38]
            wetland: [582, 266, 38, 38]
            wheelchair: [134, 700, 38, 38]
            wilderness_hut: [88, 442, 38, 38]
            wildlife_park: [44, 788, 38, 38]
            windmill: [540, 788, 38, 38]
            wine: [46, 876, 38, 38]
            winery: [360, 744, 38, 38]
            workshop: [572, 134, 38, 38]
            zoo: [838, 486, 38, 38]

    mapzen_icon_library_shields_usa:
        url: https://raw.githubusercontent.com/tangrams/bubble-wrap/gh-pages/themes/images/bubble-wrap-shields-usa@2x.png
        filtering: mipmap
        density: 5
        sprites:
            # define sprites: [x origin, y origin, width, height]
            'US:AK-1char': [220, 1510, 82, 82]
            'US:AK-2char': [118, 1512, 94, 78]
            'US:AK-3char': [0, 1512, 110, 78]
            'US:AK-4char': [804, 1414, 124, 80]
            'US:AK-5char': [660, 1416, 136, 78]
            'US:AL-1char': [204, 500, 86, 86]
            'US:AL-2char': [110, 502, 88, 88]
            'US:AL-3char': [0, 500, 104, 88]
            'US:AL-4char': [804, 392, 122, 88]
            'US:AL-5char': [662, 392, 136, 88]
            'US:AR-1char': [572, 392, 82, 82]
            'US:AR-2char': [474, 392, 90, 80]
            'US:AR-3char': [362, 392, 106, 80]
            'US:AR-4char': [232, 392, 122, 80]
            'US:AR-5char': [80, 392, 144, 80]
            'US:AZ-1char': [92, 1230, 80, 80]
            'US:AZ-2char': [0, 1230, 86, 80]
            'US:AZ-3char': [860, 1146, 102, 80]
            'US:AZ-4char': [736, 1146, 118, 80]
            'US:AZ-5char': [600, 1146, 130, 80]
            'US:BIA-1char': [316, 188, 70, 88]
            'US:BIA-2char': [228, 190, 80, 86]
            'US:BIA-3char': [122, 188, 98, 90]
            'US:BIA-4char': [0, 188, 114, 90]
            'US:BIA-5char': [806, 92, 130, 90]
            'US:BLM-1char': [694, 92, 106, 66]
            'US:BLM-2char': [564, 92, 124, 66]
            'US:BLM-3char': [418, 92, 142, 66]
            'US:BLM-4char': [252, 92, 160, 66]
            'US:BLM-5char': [80, 92, 168, 66]
            'US:CA-1char': [688, 2316, 82, 92]
            'US:CA-2char': [252, 2412, 94, 94]
            'US:CA-3char': [132, 2412, 114, 92]
            'US:CA-4char': [0, 2412, 126, 92]
            'US:CA-5char': [774, 2316, 132, 92]
            'US:CO-1char': [794, 1968, 82, 82]
            'US:CO-2char': [692, 1968, 94, 80]
            'US:CO-3char': [572, 1968, 112, 80]
            'US:CO-4char': [442, 1968, 124, 80]
            'US:CO-5char': [296, 1968, 138, 80]
            'US:DC-1char': [0, 392, 76, 102]
            'US:DC-2char': [874, 284, 76, 102]
            'US:DC-3char': [782, 284, 86, 102]
            'US:DC-4char': [674, 284, 102, 102]
            'US:DC-5char': [548, 286, 120, 100]
            'US:FL-1char': [212, 1314, 82, 82]
            'US:FL-2char': [116, 1314, 90, 80]
            'US:FL-3char': [0, 1314, 110, 80]
            'US:FL-4char': [852, 1230, 120, 80]
            'US:FL-5char': [714, 1230, 130, 80]
            'US:FSH-1char': [464, 284, 78, 78]
            'US:FSH-2char': [370, 284, 86, 80]
            'US:FSH-3char': [262, 284, 100, 80]
            'US:FSH-4char': [138, 284, 116, 80]
            'US:FSH-5char': [0, 284, 132, 80]
            'US:FSR-1char': [844, 188, 82, 56]
            'US:FSR-2char': [756, 188, 82, 56]
            'US:FSR-3char': [654, 188, 96, 56]
            'US:FSR-4char': [534, 188, 114, 56]
            'US:FSR-5char': [394, 188, 134, 56]
            'US:GA-1char': [506, 1594, 80, 80]
            'US:GA-2char': [406, 1594, 94, 78]
            'US:GA-3char': [286, 1594, 114, 78]
            'US:GA-4char': [150, 1594, 130, 78]
            'US:GA-5char': [0, 1594, 144, 78]
            'US:HI-1char': [202, 1970, 90, 90]
            'US:HI-2char': [108, 1970, 90, 90]
            'US:HI-3char': [0, 1970, 104, 88]
            'US:HI-4char': [848, 1872, 124, 90]
            'US:HI-5char': [702, 1872, 140, 90]
            'US:I-1char': [110, 2516, 90, 100]
            'US:I-2char': [654, 2516, 102, 102]
            'US:I-3char': [516, 2516, 134, 100]
            'US:I-4char': [368, 2516, 140, 100]
            'US:I-5char': [208, 2516, 152, 100]
            'US:ID-1char': [224, 764, 80, 80]
            'US:ID-2char': [120, 764, 96, 78]
            'US:ID-3char': [0, 764, 112, 78]
            'US:ID-4char': [790, 680, 126, 78]
            'US:ID-5char': [640, 680, 142, 78]
            'US:KS-1char': [808, 1314, 90, 90]
            'US:KS-2char': [704, 1314, 96, 90]
            'US:KS-3char': [586, 1318, 854, 2260]
            'US:KS-4char': [450, 1318, 1166, 2260]
            'US:KS-5char': [302, 1318, 1492, 2260]
            'US:LA-1char': [806, 500, 94, 94]
            'US:LA-2char': [702, 502, 98, 92]
            'US:LA-3char': [580, 502, 116, 92]
            'US:LA-4char': [444, 502, 130, 92]
            'US:LA-5char': [294, 502, 144, 92]
            'US:MA-1char': [910, 2234, 84, 78]
            'US:CT-1char': [910, 2234, 84, 78]
            'US:IL-1char': [910, 2234, 84, 78]
            'US:TX-1char': [910, 2234, 84, 78]
            'US:IN-1char': [910, 2234, 84, 78]
            'US:RI-1char': [910, 2234, 84, 78]
            'US:ME-1char': [910, 2234, 84, 78]
            'US:WV-1char': [910, 2234, 84, 78]
            'US:MT-1char': [910, 2234, 84, 78]
            'US:MA-2char': [814, 2232, 92, 80]
            'US:CT-2char': [814, 2232, 92, 80]
            'US:IL-2char': [814, 2232, 92, 80]
            'US:TX-2char': [814, 2232, 92, 80]
            'US:IN-2char': [814, 2232, 92, 80]
            'US:RI-2char': [814, 2232, 92, 80]
            'US:ME-2char': [814, 2232, 92, 80]
            'US:WV-2char': [814, 2232, 92, 80]
            'US:MT-2char': [814, 2232, 92, 80]
            'US:MA-3char': [704, 2232, 102, 80]
            'US:CT-3char': [704, 2232, 102, 80]
            'US:IL-3char': [704, 2232, 102, 80]
            'US:TX-3char': [704, 2232, 102, 80]
            'US:IN-3char': [704, 2232, 102, 80]
            'US:RI-3char': [704, 2232, 102, 80]
            'US:ME-3char': [704, 2232, 102, 80]
            'US:WV-3char': [704, 2232, 102, 80]
            'US:MT-3char': [704, 2232, 102, 80]
            'US:MA-4char': [576, 2232, 120, 80]
            'US:CT-4char': [576, 2232, 120, 80]
            'US:IL-4char': [576, 2232, 120, 80]
            'US:TX-4char': [576, 2232, 120, 80]
            'US:IN-4char': [576, 2232, 120, 80]
            'US:RI-4char': [576, 2232, 120, 80]
            'US:ME-4char': [576, 2232, 120, 80]
            'US:WV-4char': [576, 2232, 120, 80]
            'US:MT-4char': [576, 2232, 120, 80]
            'US:MA-5char': [442, 2232, 128, 80]
            'US:CT-5char': [442, 2232, 128, 80]
            'US:IL-5char': [442, 2232, 128, 80]
            'US:TX-5char': [442, 2232, 128, 80]
            'US:IN-5char': [442, 2232, 128, 80]
            'US:RI-5char': [442, 2232, 128, 80]
            'US:ME-5char': [442, 2232, 128, 80]
            'US:WV-5char': [442, 2232, 128, 80]
            'US:MT-5char': [442, 2232, 128, 80]
            'US:MD-1char': [98, 2148, 82, 82]
            'US:MD-2char': [0, 2150, 94, 78]
            'US:MD-3char': [894, 2064, 110, 80]
            'US:MD-4char': [762, 2064, 126, 80]
            'US:MD-5char': [622, 2064, 136, 80]
            'US:MN-1char': [684, 2148, 80, 80]
            'US:MN-2char': [584, 2148, 94, 80]
            'US:MN-3char': [466, 2148, 110, 80]
            'US:MN-4char': [334, 2148, 124, 80]
            'US:MN-5char': [190, 2148, 136, 80]
            'US:MO-1char': [842, 1512, 82, 76]
            'US:MO-2char': [736, 1512, 98, 76]
            'US:MO-3char': [606, 1512, 122, 76]
            'US:MO-4char': [466, 1512, 134, 76]
            'US:MO-5char': [310, 1512, 148, 76]
            'US:NC-1char': [398, 1774, 86, 86]
            'US:MI-1char': [398, 1774, 86, 86]
            'US:NC-2char': [284, 1776, 106, 82]
            'US:MI-2char': [284, 1776, 106, 82]
            'US:NC-3char': [150, 1774, 126, 86]
            'US:MI-3char': [150, 1774, 126, 86]
            'US:NC-4char': [0, 1774, 144, 88]
            'US:MI-4char': [0, 1774, 144, 88]
            'US:NC-5char': [744, 1682, 168, 86]
            'US:MI-5char': [744, 1682, 168, 86]
            'US:ND-1char': [822, 1062, 90, 68]
            'US:ND-2char': [714, 1062, 102, 68]
            'US:ND-3char': [592, 1062, 114, 68]
            'US:ND-4char': [460, 1062, 124, 68]
            'US:ND-5char': [308, 1062, 146, 68]
            'US:NE-1char': [462, 866, 78, 78]
            'US:NE-2char': [370, 866, 86, 80]
            'US:NE-3char': [262, 866, 100, 80]
            'US:NE-4char': [140, 866, 114, 80]
            'US:NE-5char': [0, 866, 132, 80]
            'US:NH-1char': [528, 2064, 86, 80]
            'US:NH-2char': [414, 2064, 106, 80]
            'US:NH-3char': [290, 2064, 118, 80]
            'US:NH-4char': [152, 2066, 130, 78]
            'US:NH-5char': [0, 2064, 144, 80]
            'US:NJ-1char': [356, 2232, 80, 80]
            'US:IA-1char': [356, 2232, 80, 80]
            'US:DE-1char': [356, 2232, 80, 80]
            'US:KY-1char': [356, 2232, 80, 80]
            'US:MS-1char': [356, 2232, 80, 80]
            'US:NJ-2char': [256, 2232, 94, 80]
            'US:IA-2char': [256, 2232, 94, 80]
            'US:DE-2char': [256, 2232, 94, 80]
            'US:KY-2char': [256, 2232, 94, 80]
            'US:MS-2char': [256, 2232, 94, 80]
            'US:NJ-3char': [138, 2232, 110, 80]
            'US:IA-3char': [138, 2232, 110, 80]
            'US:DE-3char': [138, 2232, 110, 80]
            'US:KY-3char': [138, 2232, 110, 80]
            'US:MS-3char': [138, 2232, 110, 80]
            'US:NJ-4char': [0, 2232, 132, 80]
            'US:IA-4char': [0, 2232, 132, 80]
            'US:DE-4char': [0, 2232, 132, 80]
            'US:KY-4char': [0, 2232, 132, 80]
            'US:MS-4char': [0, 2232, 132, 80]
            'US:NJ-5char': [768, 2148, 152, 80]
            'US:IA-5char': [768, 2148, 152, 80]
            'US:DE-5char': [768, 2148, 152, 80]
            'US:KY-5char': [768, 2148, 152, 80]
            'US:MS-5char': [768, 2148, 152, 80]
            'US:NM-1char': [832, 764, 94, 94]
            'US:NM-2char': [732, 764, 94, 94]
            'US:NM-3char': [604, 764, 122, 98]
            'US:NM-4char': [464, 764, 134, 96]
            'US:NM-5char': [312, 764, 146, 96]
            'US:NV-1char': [0, 964, 74, 94]
            'US:NV-2char': [898, 866, 82, 94]
            'US:NV-3char': [796, 866, 96, 96]
            'US:NV-4char': [678, 866, 112, 94]
            'US:NV-5char': [544, 866, 128, 94]
            'US:NY-1char': [0, 2316, 76, 88]
            'US:NY-2char': [368, 0, 88, 88]
            'US:NY-3char': [256, 0, 106, 88]
            'US:NY-4char': [130, 0, 118, 88]
            'US:NY-5char': [0, 0, 122, 88]
            'US:OH-1char': [630, 1230, 78, 78]
            'US:OH-2char': [538, 1230, 86, 78]
            'US:OH-3char': [436, 1230, 96, 78]
            'US:OH-4char': [314, 1230, 116, 78]
            'US:OH-5char': [178, 1230, 130, 78]
            'US:OK-1char': [486, 602, 84, 74]
            'US:OK-2char': [388, 602, 92, 74]
            'US:OK-3char': [276, 600, 104, 76]
            'US:OK-4char': [144, 600, 124, 76]
            'US:OK-5char': [0, 602, 138, 74]
            'US:OR-1char': [602, 1872, 94, 94]
            'US:OR-2char': [496, 1872, 100, 90]
            'US:OR-3char': [372, 1874, 116, 88]
            'US:OR-4char': [234, 1872, 130, 90]
            'US:OR-5char': [88, 1872, 140, 92]
            'US:PA-1char': [0, 92, 74, 88]
            'US:PA-2char': [852, 0, 90, 90]
            'US:PA-3char': [732, 0, 114, 88]
            'US:PA-4char': [602, 0, 122, 88]
            'US:PA-5char': [464, 0, 130, 88]
            'US:SC-1char': [550, 680, 82, 82]
            'US:SC-2char': [456, 680, 88, 80]
            'US:SC-3char': [346, 682, 104, 78]
            'US:SC-4char': [222, 680, 118, 80]
            'US:SC-5char': [82, 680, 132, 80]
            'US:SD-1char': [546, 964, 86, 86]
            'US:SD-2char': [450, 964, 90, 84]
            'US:SD-3char': [340, 964, 104, 84]
            'US:SD-4char': [218, 964, 116, 84]
            'US:SD-5char': [80, 964, 132, 84]
            'US:TN-1char': [0, 680, 78, 78]
            'US:TN-2char': [928, 602, 82, 74]
            'US:TN-3char': [826, 602, 96, 74]
            'US:TN-4char': [710, 600, 110, 76]
            'US:TN-5char': [578, 600, 126, 76]
            'US:US-1char': [832, 2412, 88, 94]
            'US:US-2char': [0, 2516, 104, 94]
            'US:US-3char': [686, 2414, 140, 98]
            'US:US-4char': [524, 2414, 158, 98]
            'US:US-5char': [352, 2412, 164, 100]
            'US:UT-1char': [552, 1414, 102, 90]
            'US:UT-2char': [440, 1414, 106, 90]
            'US:UT-3char': [310, 1414, 124, 90]
            'US:UT-4char': [160, 1414, 144, 90]
            'US:UT-5char': [0, 1416, 154, 90]
            'US:VA-1char': [652, 1680, 84, 84]
            'US:VA-2char': [558, 1680, 88, 82]
            'US:VA-3char': [452, 1680, 102, 82]
            'US:VA-4char': [326, 1682, 118, 80]
            'US:VA-5char': [180, 1680, 138, 82]
            'US:VT-1char': [500, 1148, 92, 66]
            'US:VT-2char': [394, 1148, 98, 66]
            'US:VT-3char': [278, 1148, 108, 66]
            'US:VT-4char': [146, 1148, 124, 66]
            'US:VT-5char': [0, 1148, 138, 66]
            'US:WA-1char': [0, 1872, 86, 86]
            'US:WA-2char': [894, 1774, 90, 90]
            'US:WA-3char': [780, 1774, 108, 90]
            'US:WA-4char': [646, 1774, 128, 92]
            'US:WA-5char': [492, 1774, 148, 92]
            'US:WI-1char': [92, 1680, 82, 82]
            'US:WI-2char': [0, 1680, 84, 84]
            'US:WI-3char': [850, 1594, 102, 82]
            'US:WI-4char': [730, 1594, 114, 80]
            'US:WI-5char': [594, 1594, 130, 80]
            'US:WY-1char': [220, 1062, 82, 82]
            'US:WY-2char': [118, 1062, 94, 80]
            'US:WY-3char': [0, 1062, 110, 80]
            'US:WY-4char': [786, 964, 124, 80]
            'US:WY-5char': [642, 964, 136, 80]
            county_shield-1char: [82, 2316, 74, 74]
            county_shield-2char: [588, 2316, 92, 72]
            county_shield-3char: [476, 2318, 106, 70]
            county_shield-4char: [330, 2316, 138, 72]
            county_shield-5char: [162, 2316, 162, 72]

    mapzen_icon_library_shields_international:
        url: https://raw.githubusercontent.com/tangrams/bubble-wrap/gh-pages/themes/images/bubble-wrap-shields-international@2x.png
        filtering: mipmap
        density: 5
        sprites:
scene:
    background:
        color: global.earth1
